version: "3.8"

services:
  web:
    build: 
      context: ./docker/local/server
    container_name: "${COMPOSE_PROJECT_NAME}-server"
    restart: always
    ports:
      - "80:80"
      # - "443:443"
    links: 
      - database
      - mailhog
    volumes:
      - ./code/web/:/var/www/html/:rw
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      # - ${SSL_DIR-./config/ssl}:/etc/apache2/ssl/
      - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
      - ${XDEBUG_LOG_DIR-./logs/xdebug}:/var/log/xdebug
    environment:
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT}
      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      HOST_MACHINE_MYSQL_PORT: ${HOST_MACHINE_MYSQL_PORT}
      XDEBUG_CONFIG: "client_host=host.docker.internal remote_port=${XDEBUG_PORT}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  composer:
    build:
      context: ./docker/local/server
    container_name: composer
    working_dir: ${APACHE_DOCUMENT_ROOT}
    command: ["sh", "-c", "php /home/composer.phar install"]
    volumes:
      - ./code/web:/var/www/html
    links:
      - mailhog
      - database
  database:
    image: mysql:5.7
    container_name: "${COMPOSE_PROJECT_NAME}-${DATABASE}"
    command: --default-authentication-plugin=mysql_native_password
    env_file:
      - ./docker/local/mysql/.env
    # restart: "always"
    ports:
      - "3306:3306"
    volumes:
      - mysql-volume:/var/lib/mysql
      - ${MYSQL_INITDB_DIR-./config/initdb}:/docker-entrypoint-initdb.d
      - ${MYSQL_DATA_DIR-./my.cnf}:/etc/mysql/my.cnf
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
  api:
    image: node:21-alpine3.17
    container_name: api
    working_dir: /var/www/html/
    volumes:
      - ./code/api/:/var/www/html/
    links:
      - database
      - redis
    # command: sh -c "npm run install && npm run start"
    ports:
      - 3000:3000
  redis:
    container_name: "${COMPOSE_PROJECT_NAME}-redis"
    image: redis:latest
    ports:
      - "6379:6379"
  mailhog:
    image: 'mailhog/mailhog:v1.0.1'
    container_name: mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
volumes:
  mysql-volume:
